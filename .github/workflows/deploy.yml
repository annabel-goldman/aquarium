name: Deploy to AWS Lightsail

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Generate package-lock.json
        run: |
          cd frontend
          npm install
          cd ..

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Backend Image
        run: |
          cd backend
          docker build -f Dockerfile.prod -t ${{ secrets.DOCKERHUB_USERNAME }}/aquarium-backend:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/aquarium-backend:latest
          cd ..

      - name: Build and Push Frontend/Nginx Image
        run: |
          cd frontend
          docker build -f Dockerfile.prod \
            --build-arg VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }} \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/aquarium-nginx:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/aquarium-nginx:latest
          cd ..

      - name: Create .env.production file
        run: |
          cat > .env.production << EOF
          MONGO_ROOT_USERNAME=${{ secrets.MONGO_ROOT_USERNAME }}
          MONGO_ROOT_PASSWORD=${{ secrets.MONGO_ROOT_PASSWORD }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}
          DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          EOF

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.LIGHTSAIL_SSH_KEY }}" > ~/.ssh/lightsail.pem
          chmod 600 ~/.ssh/lightsail.pem
          ssh-keyscan -H ${{ secrets.LIGHTSAIL_HOST }} >> ~/.ssh/known_hosts 2>&1 || true
          echo "StrictHostKeyChecking=no" >> ~/.ssh/config

      - name: Copy application files to server
        run: |
          rsync -avz -e "ssh -i ~/.ssh/lightsail.pem" \
            --exclude 'node_modules' \
            --exclude '.git' \
            --exclude 'scripts/venv' \
            --exclude '__pycache__' \
            --exclude 'frontend/node_modules' \
            ./ ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }}:~/aquarium/

      - name: Deploy on server
        run: |
          ssh -i ~/.ssh/lightsail.pem ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} << 'ENDSSH'
            cd ~/aquarium
            
            # Rename .env.production to .env
            mv .env.production .env
            
            # Stop existing containers
            docker-compose -f docker-compose.prod.yml down || true
            
            # Pull latest images from Docker Hub (super lightweight!)
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/aquarium-backend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/aquarium-nginx:latest
            
            # Start containers
            docker-compose -f docker-compose.prod.yml up -d
            
            # Show status
            docker-compose -f docker-compose.prod.yml ps
            
            echo "Deployment complete!"
          ENDSSH

      - name: Verify deployment
        run: |
          sleep 10
          ssh -i ~/.ssh/lightsail.pem ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} \
            "cd ~/aquarium && docker-compose -f docker-compose.prod.yml ps"

      - name: Cleanup
        if: always()
        run: |
          rm -f ~/.ssh/lightsail.pem
          rm -f .env.production
