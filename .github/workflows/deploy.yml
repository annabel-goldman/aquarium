name: Deploy to AWS Lightsail

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Generate package-lock.json
        run: |
          cd frontend
          npm install
          cd ..

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Backend Docker Image
        run: |
          cd backend
          docker build -f Dockerfile.prod -t aquarium-backend:latest .
          cd ..

      - name: Build Frontend/Nginx Docker Image
        run: |
          cd frontend
          docker build -f Dockerfile.prod \
            --build-arg VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }} \
            -t aquarium-nginx:latest .
          cd ..

      - name: Save Docker Images
        run: |
          docker save aquarium-backend:latest | gzip > backend-image.tar.gz
          docker save aquarium-nginx:latest | gzip > nginx-image.tar.gz

      - name: Create .env.production file
        run: |
          cat > .env.production << EOF
          MONGO_ROOT_USERNAME=${{ secrets.MONGO_ROOT_USERNAME }}
          MONGO_ROOT_PASSWORD=${{ secrets.MONGO_ROOT_PASSWORD }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}
          EOF

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.LIGHTSAIL_SSH_KEY }}" > ~/.ssh/lightsail.pem
          chmod 600 ~/.ssh/lightsail.pem
          ssh-keyscan -H ${{ secrets.LIGHTSAIL_HOST }} >> ~/.ssh/known_hosts 2>&1 || true
          echo "StrictHostKeyChecking=no" >> ~/.ssh/config

      - name: Copy files and images to server
        run: |
          # Wait a bit to avoid rate limiting
          sleep 5
          
          # Copy Docker images with retry
          for i in 1 2 3; do
            scp -i ~/.ssh/lightsail.pem -o ConnectTimeout=30 backend-image.tar.gz ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }}:~/ && break || sleep 10
          done
          
          for i in 1 2 3; do
            scp -i ~/.ssh/lightsail.pem -o ConnectTimeout=30 nginx-image.tar.gz ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }}:~/ && break || sleep 10
          done

          # Copy application files
          for i in 1 2 3; do
            rsync -avz -e "ssh -i ~/.ssh/lightsail.pem -o ConnectTimeout=30" \
              --exclude 'node_modules' \
              --exclude '.git' \
              --exclude 'scripts/venv' \
              --exclude '__pycache__' \
              --exclude 'backend-image.tar.gz' \
              --exclude 'nginx-image.tar.gz' \
              ./ ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }}:~/aquarium/ && break || sleep 10
          done

      - name: Deploy on server
        run: |
          ssh -i ~/.ssh/lightsail.pem -o ConnectTimeout=30 -o ServerAliveInterval=60 ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} << 'ENDSSH'
            # Load Docker images
            docker load < ~/backend-image.tar.gz
            docker load < ~/nginx-image.tar.gz
            
            # Clean up image files
            rm ~/backend-image.tar.gz ~/nginx-image.tar.gz
            
            cd ~/aquarium
            
            # Rename .env.production to .env
            mv .env.production .env
            
            # Stop existing containers
            docker-compose -f docker-compose.prod.yml down || true
            
            # Start containers (no build needed - images already loaded)
            docker-compose -f docker-compose.prod.yml up -d
            
            # Show status
            docker-compose -f docker-compose.prod.yml ps
            
            echo "Deployment complete!"
          ENDSSH

      - name: Verify deployment
        run: |
          sleep 10
          ssh -i ~/.ssh/lightsail.pem -o ConnectTimeout=30 ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }} \
            "cd ~/aquarium && docker-compose -f docker-compose.prod.yml ps"

      - name: Cleanup
        if: always()
        run: |
          rm -f ~/.ssh/lightsail.pem
          rm -f .env.production

