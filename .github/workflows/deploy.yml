name: Deploy to AWS Lightsail

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger

jobs:
  deploy:
    runs-on: self-hosted  # Run on our Lightsail server!
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate package-lock.json
        run: |
          cd frontend
          npm install
          cd ..

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Backend Image
        run: |
          cd backend
          docker build -f Dockerfile.prod -t ${{ secrets.DOCKERHUB_USERNAME }}/aquarium-backend:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/aquarium-backend:latest
          cd ..

      - name: Build and Push Frontend/Nginx Image
        run: |
          cd frontend
          docker build -f Dockerfile.prod \
            --build-arg VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }} \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/aquarium-nginx:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/aquarium-nginx:latest
          cd ..

      - name: Copy files to deployment directory
        run: |
          # Create deployment directory if it doesn't exist
          mkdir -p ~/aquarium
          
          # Copy necessary files (excluding node_modules, git, etc.)
          rsync -av --delete \
            --exclude 'node_modules' \
            --exclude '.git' \
            --exclude 'scripts/venv' \
            --exclude '__pycache__' \
            --exclude 'frontend/node_modules' \
            ./ ~/aquarium/

      - name: Create .env file
        run: |
          cd ~/aquarium
          cat > .env << EOF
          MONGO_ROOT_USERNAME=${{ secrets.MONGO_ROOT_USERNAME }}
          MONGO_ROOT_PASSWORD=${{ secrets.MONGO_ROOT_PASSWORD }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}
          DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          EOF

      - name: Deploy containers
        run: |
          cd ~/aquarium
          
          # Stop existing containers
          docker-compose -f docker-compose.prod.yml down || true
          
          # Pull latest images from Docker Hub
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/aquarium-backend:latest
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/aquarium-nginx:latest
          
          # Start containers
          docker-compose -f docker-compose.prod.yml up -d
          
          # Show status
          docker-compose -f docker-compose.prod.yml ps
          
          echo "âœ… Deployment complete!"

      - name: Verify deployment
        run: |
          sleep 5
          curl -f http://localhost || echo "Warning: Health check failed"
          cd ~/aquarium && docker-compose -f docker-compose.prod.yml ps
