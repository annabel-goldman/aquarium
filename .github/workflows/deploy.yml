name: Deploy to AWS Lightsail

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger from GitHub UI

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile.prod
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/aquarium-backend:latest
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/aquarium-backend:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/aquarium-backend:buildcache,mode=max

      - name: Build and push frontend/nginx image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/aquarium-nginx:latest
          build-args: |
            VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/aquarium-nginx:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/aquarium-nginx:buildcache,mode=max

      - name: Deploy to Lightsail
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          command_timeout: 10m
          script: |
            # Navigate to app directory
            cd ~/aquarium || exit 1
            
            # Pull latest code (for docker-compose.yml and nginx config)
            git pull origin main
            
            # Create .env file with secrets
            cat > .env << EOF
            MONGO_ROOT_USERNAME=${{ secrets.MONGO_ROOT_USERNAME }}
            MONGO_ROOT_PASSWORD=${{ secrets.MONGO_ROOT_PASSWORD }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}
            DOCKER_REGISTRY=ghcr.io/${{ github.repository_owner }}
            EOF
            
            # Stop existing containers
            docker-compose -f docker-compose.prod.yml down
            
            # Pull latest images from GitHub Container Registry
            docker pull ghcr.io/${{ github.repository_owner }}/aquarium-backend:latest
            docker pull ghcr.io/${{ github.repository_owner }}/aquarium-nginx:latest
            
            # Start containers with pre-built images
            docker-compose -f docker-compose.prod.yml up -d
            
            # Clean up old images
            docker image prune -f
            
            # Show status
            echo "=== Deployment Status ==="
            docker-compose -f docker-compose.prod.yml ps
            
            echo "✅ Deployment complete!"

      - name: Verify deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            sleep 10
            cd ~/aquarium
            docker-compose -f docker-compose.prod.yml ps
            curl -f http://localhost || echo "⚠️ Warning: Health check failed"
